name: "Push Event And Pull Event"
on:
  push:
    branches:
      - task_review
  pull_request:
    branches:
      - task_review


jobs:
    assign-env:
      runs-on: ubuntu-latest
      outputs:
        current_env: ${{ steps.set_env.outputs.my_var }}
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Assign Environment
          id: set_env
          run: make assign_env
      
    pull-job:
        needs: assign-env
        if: github.event_name == 'pull_request'
        runs-on: ubuntu-latest
        environment:
          name: ${{ needs.assign-env.outputs.current_env }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Aws Credentials Configuration
              uses:  ./.github/actions/aws_configuration 
              with:
                AWS_ACCOUNT_ID: '${{secrets.AWS_ACCOUNT_ID}}'
                AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
                AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'

            - name: Terragrunt && Terraform Installation
              uses: ./.github/actions/terragrunt_terraform_install
              
            - name: Terragrunt plan Configuration
              run: make plan

    push-job:
        needs: assign-env
        if: github.event_name == 'push'
        runs-on: ubuntu-latest
        environment:
          name: ${{ needs.assign-env.outputs.current_env }}
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4
        
          - name: Aws Credentials Configuration
            uses: ./.github/actions/aws_configuration
            with:
                AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
          - name: Terragrunt && Terraform Installation
            uses: ./.github/actions/terragrunt_terraform_install

          - name: Image Push Script
            run: make image_push
            env:
                AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
                GITHUB_COMMIT_HASH: '${{ github.sha }}'
                
          - name: Terragrunt plan Configuration
            run: make plan
          
          - name: Terragrunt apply Configuration
            run: make apply-ci